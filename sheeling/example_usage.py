"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ShillingStreamHelper –∑ —Ä–æ–±–æ—Ç–æ—é –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
"""
import asyncio
import json
import sys
import os
from datetime import datetime

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –∫–æ—Ä–µ–Ω–µ–≤–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –ø—Ä–æ–µ–∫—Ç—É
current_dir = os.path.dirname(os.path.abspath(__file__))
parent_dir = os.path.dirname(current_dir)
if parent_dir not in sys.path:
    sys.path.insert(0, parent_dir)

from stream_helper import ShillingStreamHelper
from google_utils import GoogleUtils

class MockGoogleUtils:
    """–ú–æ–∫ –¥–ª—è Google Utils –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è"""
    
    async def get_accounts_for_group(self, group_name: str):
        """–ü–æ–≤–µ—Ä—Ç–∞—î —Ç–µ—Å—Ç–æ–≤—ñ –∞–∫–∫–∞—É–Ω—Ç–∏"""
        return [
            {
                'Username': 'test_user1',
                'Auth_Token': 'auth_token_1',
                'ct0 Token': 'ct0_token_1',
                'Status': 'Active',
                'Proxy': ''
            },
            {
                'Username': 'test_user2',
                'Auth_Token': 'auth_token_2',
                'ct0 Token': 'ct0_token_2',
                'Status': 'Good',
                'Proxy': ''
            }
        ]

async def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è"""
    print("üöÄ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ShillingStreamHelper –∑ —Ä–æ–±–æ—Ç–æ—é –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ")
    
    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø–∏
    group_settings = {
        'group_name': 'TestGroup',
        'work_interval': 60,  # 1 —Ö–≤–∏–ª–∏–Ω–∞ –º—ñ–∂ —Ü–∏–∫–ª–∞–º–∏
        'min_delay': 10,      # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –¥—ñ—è–º–∏ (—Å–µ–∫—É–Ω–¥–∏)
        'max_delay': 30,      # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –¥—ñ—è–º–∏ (—Å–µ–∫—É–Ω–¥–∏)
        'actions': [
            {
                'type': 'like',
                'probability': 0.3,
                'targets': ['https://twitter.com/example1', 'https://twitter.com/example2']
            },
            {
                'type': 'retweet',
                'probability': 0.2,
                'targets': ['https://twitter.com/example3']
            },
            {
                'type': 'comment',
                'probability': 0.1,
                'messages': ['–í—ñ–¥–º—ñ–Ω–Ω–∏–π –ø–æ—Å—Ç!', '–î—É–∂–µ —Ü—ñ–∫–∞–≤–æ!', '–î—è–∫—É—é –∑–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!']
            },
            {
                'type': 'follow',
                'probability': 0.1,
                'targets': ['user1', 'user2', 'user3']
            }
        ]
    }
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–∫ –¥–ª—è Google Utils
    google_utils = MockGoogleUtils()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä ShillingStreamHelper
    stream_helper = ShillingStreamHelper(
        group_name=group_settings['group_name'],
        group_settings=group_settings,
        google_utils=google_utils
    )
    
    print(f"üìã –°—Ç–≤–æ—Ä–µ–Ω–æ Stream Helper –¥–ª—è –≥—Ä—É–ø–∏: {stream_helper.group_name}")
    print(f"‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è: {json.dumps(group_settings, indent=2, ensure_ascii=False)}")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ä–æ–±–æ—Ç—É –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
        print("\nüîÑ –ó–∞–ø—É—Å–∫ —Ä–æ–±–æ—Ç–∏ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ...")
        success = await stream_helper.start_work()
        
        if success:
            print("‚úÖ –†–æ–±–æ—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {stream_helper.get_status()}")
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä—É—î–º–æ —Ä–æ–±–æ—Ç—É –ø—Ä–æ—Ç—è–≥–æ–º 2 —Ö–≤–∏–ª–∏–Ω
            print("\n‚è±Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ—Ç—è–≥–æ–º 2 —Ö–≤–∏–ª–∏–Ω...")
            
            for i in range(12):  # 12 —ñ—Ç–µ—Ä–∞—Ü—ñ–π –ø–æ 10 —Å–µ–∫—É–Ω–¥ = 2 —Ö–≤–∏–ª–∏–Ω–∏
                await asyncio.sleep(10)
                
                # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å
                status = stream_helper.get_status()
                print(f"üìà –Ü—Ç–µ—Ä–∞—Ü—ñ—è {i+1}/12:")
                print(f"   - –ü–æ—Ç—ñ–∫ –∞–∫—Ç–∏–≤–Ω–∏–π: {status['thread_alive']}")
                print(f"   - Thread ID: {status['thread_id']}")
                print(f"   - –ê–∫–∫–∞—É–Ω—Ç—ñ–≤: {status['accounts_count']}")
                print(f"   - –í—Å—å–æ–≥–æ –¥—ñ–π: {status['stats']['total_actions']}")
                print(f"   - –£—Å–ø—ñ—à–Ω–∏—Ö: {status['stats']['successful_actions']}")
                print(f"   - –ù–µ–≤–¥–∞–ª–∏—Ö: {status['stats']['failed_actions']}")
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—ñ–∫ –≤—Å–µ —â–µ –ø—Ä–∞—Ü—é—î
                if not stream_helper.is_working():
                    print("‚ö†Ô∏è –ü–æ—Ç—ñ–∫ –∑—É–ø–∏–Ω–∏–≤—Å—è –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–æ!")
                    break
            
            # –ó—É–ø–∏–Ω—è—î–º–æ —Ä–æ–±–æ—Ç—É
            print("\nüõë –ó—É–ø–∏–Ω–∫–∞ —Ä–æ–±–æ—Ç–∏...")
            stop_success = await stream_helper.stop_work()
            
            if stop_success:
                print("‚úÖ –†–æ–±–æ—Ç–∞ —É—Å–ø—ñ—à–Ω–æ –∑—É–ø–∏–Ω–µ–Ω–∞!")
            else:
                print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—É–ø–∏–Ω—Ü—ñ —Ä–æ–±–æ—Ç–∏!")
                
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Ä–æ–±–æ—Ç–∏!")
            
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª –ø–µ—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è, –∑—É–ø–∏–Ω—è—î–º–æ —Ä–æ–±–æ—Ç—É...")
        await stream_helper.stop_work()
        print("‚úÖ –†–æ–±–æ—Ç–∞ –∑—É–ø–∏–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        await stream_helper.stop_work()
    
    finally:
        # –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        final_status = stream_helper.get_status()
        print(f"\nüìä –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   - –ì—Ä—É–ø–∞: {final_status['group_name']}")
        print(f"   - –°—Ç–∞—Ç—É—Å: {'–ó–∞–ø—É—â–µ–Ω–∞' if final_status['is_running'] else '–ó—É–ø–∏–Ω–µ–Ω–∞'}")
        print(f"   - –ü–æ—Ç—ñ–∫ –∞–∫—Ç–∏–≤–Ω–∏–π: {final_status['thread_alive']}")
        print(f"   - –í—Å—å–æ–≥–æ –¥—ñ–π: {final_status['stats']['total_actions']}")
        print(f"   - –£—Å–ø—ñ—à–Ω–∏—Ö: {final_status['stats']['successful_actions']}")
        print(f"   - –ù–µ–≤–¥–∞–ª–∏—Ö: {final_status['stats']['failed_actions']}")
        
        if final_status['stats']['start_time']:
            start_time = final_status['stats']['start_time']
            if isinstance(start_time, str):
                start_time = datetime.fromisoformat(start_time)
            duration = datetime.now() - start_time
            print(f"   - –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Ä–æ–±–æ—Ç–∏: {duration}")

if __name__ == "__main__":
    print("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–∫–ª–∞–¥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è ShillingStreamHelper")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
    asyncio.run(main())
    
    print("\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
